{"version":3,"sources":["store/actions/modal.actions.js","components/Modal/Modal.js","components/Loader/index.js","store/actions/authors.actions.js","constants/api-methods.js","blocks/header/index.js","store/actions/news-list.actions.js","store/actions/news.actions.js","constants/styles.js","blocks/news-list/index.js","blocks/News/index.js","App.js","store/reducers/modal.reducer.js","store/reducers/news-list.reducer.js","store/reducers/news.reducer.js","store/reducers/authors.reducer.js","utils/api/index.js","store/index.js","store/reducers/index.js","index.js","config/index.js"],"names":["MODAL_ACTION_TYPES","showModal","title","Node","type","payload","isShow","hideModal","Modals","this","props","modalState","visible","onCancel","footer","PureComponent","connect","selectNewsState","newsData","dispatch","bindActionCreators","Loader","children","className","AUTHOR_ACTION_TYPES","setSelectedAuthor","id","changeAuthorProcessing","state","getData","methodUrl","getState","getAxios","a","axios","get","response","API_METHODS","Header","Option","Select","authors","style","width","placeholder","allowClear","onChange","map","item","value","key","name","Component","authorState","NEWS_LIST_ACTION_TYPES","setData","news","changeNewsProcessing","NEWS_ACTION_TYPES","data","clearState","NewsList","newsCount","addNewsCount","addNews","setState","prevProps","prevState","snapshot","selectedAuthorId","getFromUser","Boolean","newsList","setSelectedNews","processing","gutter","styles","newsListForRender","slice","content","sm","md","lg","xl","onClick","News","marginBottom","maxHeight","overflow","body","length","shape","newsState","newsId","commentsData","author","href","email","App","Modal","initialState","action","axiosClient","AxiosClient","logoutSubscribers","Object","keys","forEach","propName","localAxios","create","baseURL","_API_URL","interceptors","request","use","config","headers","Accept","error","status","_client","store","createStore","combineReducers","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","API_URL","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ccee729.chunk.js","sourcesContent":["export const MODAL_ACTION_TYPES = {\r\n  MODAL_SHOW_MODAL: 'MODAL_SHOW_MODAL',\r\n  MODAL_HIDE_MODAL: 'MODAL_HIDE_MODAL',\r\n};\r\n\r\nexport function showModal({title, Node}) {\r\n  return {\r\n    type: MODAL_ACTION_TYPES.MODAL_SHOW_MODAL,\r\n    payload: {title, Node, isShow: true},\r\n  };\r\n}\r\n\r\nexport function hideModal() {\r\n  return {\r\n    type: MODAL_ACTION_TYPES.MODAL_HIDE_MODAL,\r\n  };\r\n}","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Modal} from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {showModal, hideModal} from 'store/actions/modal.actions';\r\n\r\nclass Modals extends PureComponent {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    modalState: PropTypes.object,\r\n  };\r\n\r\n  render() {\r\n    const { modalState: {Node = (<></>), title, isShow}, hideModal} = this.props;\r\n    return (\r\n      <Modal\r\n        title={title}\r\n        visible={isShow}\r\n        onCancel={hideModal}\r\n        footer={null}\r\n      >\r\n        <Node/>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({modalState,selectNewsState: { newsData: { title } }}) => ({\r\n  modalState,\r\n  title\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  showModal: bindActionCreators(showModal, dispatch),\r\n  hideModal: bindActionCreators(hideModal, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modals);\r\n","import React, {PureComponent} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './loader.scss'\r\n\r\nexport class Loader extends PureComponent {\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n  };\r\n\r\n  render() {\r\n    const {children, isShow} = this.props;\r\n    return (\r\n      <div className=\"loader\">\r\n        {isShow && (\r\n          <div className=\"loader__overlay\">\r\n            <div className=\"loader__spinner\"/>\r\n          </div>\r\n        )}\r\n        {children}\r\n      </div>\r\n    )\r\n  }\r\n}","export const AUTHOR_ACTION_TYPES = {\r\n  AUTHOR_SET_AUTHORS: 'AUTHOR_SET_AUTHORS',\r\n  AUTHOR_SET_SELECTED: 'AUTHOR_SET_SELECTED',\r\n  AUTHOR_CHANGE_PROCESSING_STATE: 'AUTHORS_CHANGE_PROCESSING_STATE',\r\n};\r\n\r\nexport const setData = authors => ({\r\n  type: AUTHOR_ACTION_TYPES.AUTHOR_SET_AUTHORS,\r\n  payload: authors\r\n});\r\n\r\nexport const setSelectedAuthor = id => ({\r\n  type: AUTHOR_ACTION_TYPES.AUTHOR_SET_SELECTED,\r\n  payload: id ? id: ''\r\n});\r\n\r\nexport const changeAuthorProcessing = (state) => {\r\n  return {\r\n    type: AUTHOR_ACTION_TYPES.AUTHOR_CHANGE_PROCESSING_STATE,\r\n    payload: state,\r\n  };\r\n};\r\n\r\nexport function getData(methodUrl) {\r\n  return async (dispatch, getState, getAxios) => {\r\n    const axios = getAxios();\r\n\r\n    dispatch(changeAuthorProcessing(true));\r\n\r\n    const response = await axios.get(methodUrl);\r\n\r\n    dispatch(changeAuthorProcessing(false));\r\n\r\n    if (!response) {\r\n      return response;\r\n    }\r\n\r\n    dispatch(setData(response));\r\n\r\n    return response;\r\n  };\r\n}","export const API_METHODS = {\r\n  POSTS: '/posts',\r\n  POST: id => `/posts/${id}`,\r\n  USERS: '/users',\r\n  COMMENTS: id => `/posts/${id}/comments`,\r\n};","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {Select} from \"antd\";\r\n\r\nimport {getData, setSelectedAuthor} from 'store/actions/authors.actions';\r\nimport {API_METHODS} from 'constants/api-methods';\r\n\r\nimport './header.scss';\r\n\r\nclass Header extends Component {\r\n  static propTypes = {\r\n    author: PropTypes.string,\r\n    getData: PropTypes.func,\r\n    setSelectedAuthor: PropTypes.func,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const {getData} = this.props;\r\n    getData(API_METHODS.USERS)\r\n  }\r\n\r\n  render() {\r\n    const {Option} = Select;\r\n\r\n    const {authors, setSelectedAuthor} = this.props;\r\n\r\n    return (\r\n      <header className=\"header container\">\r\n        <Select\r\n          style={{width: 200}}\r\n          placeholder=\"Select a author\"\r\n          allowClear\r\n          onChange={id => setSelectedAuthor(id)}\r\n        >\r\n          {authors.map(item => (\r\n            <Option\r\n              value={item.id}\r\n              key={item.id}\r\n            >\r\n              {item.name}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({authorState}) => ({\r\n  authors: authorState.authors,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getData: bindActionCreators(getData, dispatch),\r\n  setSelectedAuthor: bindActionCreators(setSelectedAuthor, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","export const NEWS_LIST_ACTION_TYPES = {\r\n  NEWS_LIST_SET_STATE: 'NEWS_LIST_SET_STATE',\r\n  NEWS_LIST_CHANGE_PROCESSING_STATE: 'NEWS_LIST_CHANGE_PROCESSING_STATE',\r\n};\r\n\r\nexport const setData = news => ({\r\n  type: NEWS_LIST_ACTION_TYPES.NEWS_LIST_SET_STATE,\r\n  payload: news\r\n});\r\n\r\nexport const changeNewsProcessing = (state) => {\r\n  return {\r\n    type: NEWS_LIST_ACTION_TYPES.NEWS_LIST_CHANGE_PROCESSING_STATE,\r\n    payload: state,\r\n  };\r\n};\r\n\r\nexport function getData(methodUrl) {\r\n  return async (dispatch, getState, getAxios) => {\r\n    const axios = getAxios();\r\n\r\n    dispatch(changeNewsProcessing(true));\r\n\r\n    const response = await axios.get(methodUrl);\r\n\r\n    dispatch(changeNewsProcessing(false));\r\n\r\n    if (!response) {\r\n      return response;\r\n    }\r\n\r\n    dispatch(setData(response));\r\n\r\n    return response;\r\n  };\r\n}","export const NEWS_ACTION_TYPES = {\r\n  NEWS_SET_STATE: 'NEWS_SET_STATE',\r\n  NEWS_CHANGE_PROCESSING_STATE: 'NEWS_CHANGE_PROCESSING_STATE',\r\n  NEWS_CLEAR_STATE: 'NEWS_CLEAR_STATE',\r\n};\r\n\r\nexport const setData = ({key, data}) => ({\r\n  type: NEWS_ACTION_TYPES.NEWS_SET_STATE,\r\n  payload: {key, data}\r\n});\r\nexport const changeNewsProcessing = (state) => {\r\n  return {\r\n    type: NEWS_ACTION_TYPES.NEWS_CHANGE_PROCESSING_STATE,\r\n    payload: state,\r\n  };\r\n};\r\n\r\nexport function getData(methodUrl, key) {\r\n  return async (dispatch, getState, getAxios) => {\r\n    const axios = getAxios();\r\n\r\n    dispatch(changeNewsProcessing(true));\r\n\r\n    const response = await axios.get(methodUrl);\r\n\r\n    dispatch(changeNewsProcessing(false));\r\n\r\n    if (!response) {\r\n      return response;\r\n    }\r\n\r\n    dispatch(setData({\r\n      key: key,\r\n      data: response,\r\n    }));\r\n\r\n    return response;\r\n  };\r\n}\r\n\r\nexport const clearState = () => {\r\n  return {\r\n    type: NEWS_ACTION_TYPES.NEWS_CLEAR_STATE,\r\n  };\r\n};","export default {\r\n  gutter: 16,\r\n}","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Row, Col, Card} from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {News} from 'blocks'\r\nimport {Loader} from 'components'\r\n\r\nimport {getData} from 'store/actions/news-list.actions';\r\nimport {setData as setSelectedNews} from 'store/actions/news.actions';\r\nimport {showModal} from 'store/actions/modal.actions';\r\nimport {API_METHODS} from 'constants/api-methods';\r\n\r\nimport styles from 'constants/styles'\r\nimport './news-list.scss';\r\n\r\nclass NewsList extends Component {\r\n  static propTypes = {\r\n    newsList: PropTypes.array,\r\n    selectedAuthorId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    getData: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    newsCount: 10,\r\n  };\r\n\r\n  addNewsCount = 10;\r\n\r\n  async componentDidMount() {\r\n    const {getData} = this.props;\r\n    await getData(API_METHODS.POSTS)\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    const {getData, selectedAuthorId} = this.props;\r\n\r\n    if (prevProps.selectedAuthorId !== selectedAuthorId) {\r\n      const getFromUser = Boolean(selectedAuthorId)\r\n        ? `?userId=${selectedAuthorId}`\r\n        : '';\r\n      getData(`${API_METHODS.POSTS}${getFromUser}`)\r\n    }\r\n  }\r\n\r\n  addNews = () => {\r\n    this.setState(state => ({\r\n      newsCount: state.newsCount + this.addNewsCount\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {newsList, showModal, setSelectedNews, processing} = this.props;\r\n\r\n    const {newsCount} = this.state;\r\n\r\n    const {gutter} = styles;\r\n\r\n    const newsListForRender = newsList.slice(0, newsCount);\r\n    return (\r\n      <div className=\"container\">\r\n        <Loader isShow={processing}>\r\n          <Row gutter={gutter} content=\"top\">\r\n            {newsListForRender.map(item => (\r\n              <Col sm={24} md={12} lg={8} xl={6} key={item.id}>\r\n                <Card\r\n                  title={item.title}\r\n                  onClick={() => {\r\n                    setSelectedNews({key: 'newsId', data: item.id});\r\n                    showModal({\r\n                      title: item.title,\r\n                      Node: News\r\n                    })\r\n                  }}\r\n                  className=\"cursor-pointer\"\r\n                  style={{\r\n                    marginBottom: gutter,\r\n                    maxHeight: 150,\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <article>\r\n                    {`${item.body.slice(0, 70)}...`}\r\n                  </article>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n\r\n          </Row>\r\n        </Loader>\r\n        {newsCount < newsList.length && (\r\n          <Button\r\n            className=\"button-load-more\"\r\n            shape=\"round\"\r\n            type=\"primary\"\r\n            onClick={() => this.addNews()}\r\n          >\r\n            Load more...\r\n          </Button>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n                           newsState: {newsList, processing},\r\n                           authorState: {selectedAuthorId},\r\n                         }) => ({newsList, selectedAuthorId, processing});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getData: bindActionCreators(getData, dispatch),\r\n  setSelectedNews: bindActionCreators(setSelectedNews, dispatch),\r\n  showModal: bindActionCreators(showModal, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewsList)","import React, {Fragment, PureComponent} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {Comment} from 'antd';\r\n\r\nimport {Loader} from \"components\";\r\n\r\nimport {getData, clearState} from 'store/actions/news.actions'\r\nimport {API_METHODS} from 'constants/api-methods';\r\n\r\nimport './news.scss'\r\n\r\nexport class News extends PureComponent {\r\n  static propTypes = {\r\n    processing: PropTypes.bool,\r\n    newsData: PropTypes.object,\r\n    newsId: PropTypes.number,\r\n    getData: PropTypes.func,\r\n    getComments: PropTypes.func,\r\n    clearState: PropTypes.func,\r\n  };\r\n\r\n\r\n  async componentDidMount() {\r\n    const {getData, newsId} = this.props;\r\n    await getData(API_METHODS.POST(newsId), 'newsData');\r\n    await getData(API_METHODS.COMMENTS(newsId), 'commentsData');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { clearState } = this.props;\r\n    clearState();\r\n  }\r\n\r\n  render() {\r\n    const {newsData, commentsData, processing} = this.props;\r\n    return (\r\n      <Loader isShow={processing}>\r\n        {newsData.body}\r\n        <h3 className=\"comments-title\">Comments</h3>\r\n        <div>\r\n          {commentsData.map(item => (\r\n            <Fragment key={item.id}>\r\n              <Comment\r\n                author={<p>{item.name}<br/><a href={`mailto:${item.email}`}>{item.email}</a></p>}\r\n                content={item.body}\r\n              />\r\n              <hr/>\r\n            </Fragment>\r\n          ))}\r\n        </div>\r\n      </Loader>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n                           selectNewsState: {newsData, newsId, commentsData, processing},\r\n                         }) => ({newsData, newsId, commentsData, processing});\r\nconst mapDispatchToProps = dispatch => ({\r\n  getData: bindActionCreators(getData, dispatch),\r\n  clearState: bindActionCreators(clearState, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(News)","import React from 'react';\r\nimport { Modals} from 'components';\r\nimport { Header, NewsList } from 'blocks';\r\nimport 'styles/app.scss'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"app_wrapper\">\r\n      <div className=\"app\">\r\n        <Header/>\r\n        <NewsList/>\r\n        <Modals/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import {MODAL_ACTION_TYPES} from 'store/actions/modal.actions';\r\nimport React from \"react\";\r\n\r\nconst initialState = {\r\n  Node: () => <div/>,\r\n  title: '',\r\n  isShow: false,\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n  const {type, payload} = action;\r\n  switch (type) {\r\n    case MODAL_ACTION_TYPES.MODAL_SHOW_MODAL:\r\n      return {...state, ...payload};\r\n    case MODAL_ACTION_TYPES.MODAL_HIDE_MODAL:\r\n      return {...initialState};\r\n    default:\r\n      return state;\r\n  }\r\n}","import {NEWS_LIST_ACTION_TYPES} from 'store/actions/news-list.actions'\r\n\r\nconst initialState = {\r\n  newsList: [],\r\n  processing: true,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const {type, payload} = action;\r\n  switch (type) {\r\n    case NEWS_LIST_ACTION_TYPES.NEWS_LIST_CHANGE_PROCESSING_STATE:\r\n      return {\r\n        ...state,\r\n        processing: payload,\r\n      };\r\n    case NEWS_LIST_ACTION_TYPES.NEWS_LIST_SET_STATE:\r\n      return {\r\n        ...state,\r\n        newsList: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}","import { NEWS_ACTION_TYPES } from \"store/actions/news.actions\";\r\n\r\nconst initialState = {\r\n  newsId: '',\r\n  newsData: {},\r\n  commentsData: [],\r\n  processing: true,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const {type, payload} = action;\r\n  switch (type) {\r\n    case NEWS_ACTION_TYPES.NEWS_CHANGE_PROCESSING_STATE:\r\n      return {\r\n        ...state,\r\n        processing: payload,\r\n      };\r\n    case NEWS_ACTION_TYPES.NEWS_SET_STATE:\r\n      return {\r\n        ...state,\r\n        [payload.key]: payload.data,\r\n      };\r\n    case NEWS_ACTION_TYPES.NEWS_CLEAR_STATE:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}","import {AUTHOR_ACTION_TYPES} from 'store/actions/authors.actions'\r\n\r\nconst initialState = {\r\n  authors: [],\r\n  selectedAuthorId: '',\r\n  processing: true,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const {type, payload} = action;\r\n  switch (type) {\r\n    case AUTHOR_ACTION_TYPES.AUTHOR_CHANGE_PROCESSING_STATE:\r\n      return {\r\n        ...state,\r\n        processing: payload,\r\n      };\r\n    case AUTHOR_ACTION_TYPES.AUTHOR_SET_SELECTED:\r\n      return {\r\n        ...state,\r\n        selectedAuthorId: payload,\r\n      };\r\n    case AUTHOR_ACTION_TYPES.AUTHOR_SET_AUTHORS:\r\n      return {\r\n        ...state,\r\n        authors: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}","import axios from 'axios';\r\n\r\nlet axiosClient = null;\r\n\r\nclass AxiosClient {\r\n  constructor(props = {}) {\r\n    this.logoutSubscribers = [];\r\n\r\n    Object.keys(props).forEach((propName) => {\r\n      this[`_${propName}`] = props[propName];\r\n    });\r\n\r\n    const localAxios = axios.create({\r\n      baseURL: this._API_URL,\r\n    });\r\n\r\n    localAxios.interceptors.request.use((config) => {\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      };\r\n      return {\r\n        ...config,\r\n        headers,\r\n      };\r\n    });\r\n\r\n    localAxios.interceptors.response.use(\r\n      (response) => response.data,\r\n      async (error) => {\r\n        const { response = {} } = error;\r\n\r\n        return {\r\n          status: response.status,\r\n          ...response.data,\r\n        };\r\n      },\r\n    );\r\n\r\n    this._client = localAxios;\r\n  }\r\n\r\n  getAxios() {\r\n    return this._client;\r\n  }\r\n}\r\n\r\nfunction init(props) {\r\n  axiosClient = new AxiosClient(props);\r\n}\r\n\r\nfunction getAxios() {\r\n  return axiosClient.getAxios();\r\n}\r\n\r\nexport { init, getAxios };\r\n","import thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reducers from './reducers';\r\nimport { getAxios } from 'utils/api';\r\n\r\n\r\nexport const store = createStore(\r\n  reducers(),\r\n  composeWithDevTools(applyMiddleware(thunk.withExtraArgument(getAxios))),\r\n);","import {combineReducers} from 'redux';\r\n\r\nimport modalState from './modal.reducer'\r\nimport newsState from './news-list.reducer'\r\nimport selectNewsState from './news.reducer'\r\nimport authorState from './authors.reducer'\r\n\r\nexport default () => combineReducers({\r\n  newsState,\r\n  selectNewsState,\r\n  modalState,\r\n  authorState,\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\n\r\nimport {store} from 'store';\r\nimport { init } from 'utils/api';\r\nimport config from 'config';\r\n\r\nimport 'styles/index.scss'\r\nimport 'antd/dist/antd.css';\r\nconst { API_DOMAIN } = config;\r\n\r\nlet API_URL = `${API_DOMAIN}`;\r\n\r\ninit({store, API_URL});\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n","export default {\r\n  API_DOMAIN: 'https://jsonplaceholder.typicode.com/',\r\n}"],"sourceRoot":""}